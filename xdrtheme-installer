#!/bin/bash
#--------------------------------------------------------
#   Don't remove this section for credits
#   Don't rename this file
#--------------------------------------------------------
#   This script is used to install Xderm Mini GUI custom theme
#   Installation script by helmiau a.k.a Helmi Amirudin
#   my profile page https://me.helmiau.my.id
#   my github https://github.com/helmiau
#--------------------------------------------------------

#-- Warna Teks Installer
RED='\033[1;31m' # Merah Muda
GRE='\033[1;32m' # Hijau Muda
CYA='\033[0;36m' # Biru Muda
YEL='\033[1;33m' # Kuning
NOR='\033[1;37m' # Putih

#-- Theme Info
THEMENAME=$(grep THEMENAME /root/xdrtheme-info | awk -F'"' '$0=$2')
CREATOR=$(grep CREATOR /root/xdrtheme-info | awk -F'"' '$0=$2')
THEMEVER=$(grep THEMEVER /root/xdrtheme-info | awk -F'"' '$0=$2')
GITUSER=$(grep GITUSER /root/xdrtheme-info | awk -F'"' '$0=$2')
GITREPO=$(grep GITREPO /root/xdrtheme-info | awk -F'"' '$0=$2')
GITBRANCH=$(grep GITBRANCH /root/xdrtheme-info | awk -F'"' '$0=$2')
# UPDATELIST=$(grep UPDATELIST /root/xdrtheme-info | sed 's/.*UPDATELIST=//')
#-- Theme Info End

#-- Uneditable Info for script checking purpose
INSTALLERNAME="$(basename "$0")"
CHECKNET="http://github.com/${GITUSER}/${GITREPO}"
URLTHEME="${CHECKNET}/${GITBRANCH}"
GITURLTHEME="git://github.com/${GITUSER}/${GITREPO}.git"
GITRAW="http://raw.githubusercontent.com/${GITUSER}/${GITREPO}/${GITBRANCH}/"
XDERMPATH="/www/xderm"
# XDERMOLDTHEME=$(ls ${XDERMPATH} | grep xdrtheme | sed 's/.*xdrtheme-//')
# XDERMOLDTHEMEBAK=$(ls /www | grep -q xderm | sed 's/.*//')
XDERMPATHBAK="/www/xdermbak"
XDERMCONFIGBAK="/www/xderm-config"
THEMEINFO="/www/xderm/$GITREPO-$GITUSER"
XDERMPATHINFO=$(if [ -d ${XDERMPATH} ]; then echo -e "${GRE}Available"; else echo -e "${RED}Unavailable"; fi)
XDERMPATHBAKINFO=$(if [ -d ${XDERMPATHBAK} ]; then echo -e "${GRE}Available"; else echo -e "${RED}Unavailable"; fi)
INSTALLSTAT=$(if [ -e "${THEMEINFO}" ]; then echo -e "${GRE}Installed"; else echo -e "${RED}Not Installed"; fi)
if [ -f /root/auth.txt ]; then
	USERNOW=$(grep user /root/auth.txt | sed 's/.*user=//')
	PASSNOW=$(grep passwd /root/auth.txt | sed 's/.*passwd=//')
else
	USERNOW="${RED}auth file not exist"
	PASSNOW="${RED}auth file not exist"
fi
LOGINOW=$(if [ -e /www/xderm/login.php ]; then echo -e "${GRE}Available"; else echo -e "${RED}Unavailable"; fi)
LOGINOWBAK=$(if [ -e /www/xderm/login.php.xdrtool ]; then echo -e "${GRE}Available"; else echo -e "${RED}Unavailable"; fi)
SCRIPTVER="4.3"

#-- Installer Scripts
echo -e "${NOR}==========================================="
echo -e "  ${YEL}Xderm Mini ${CYA}Theme Installer ${RED}v$SCRIPTVER by ${GRE}helmiau${NOR}" #Do not remove this
echo "==========================================="
echo -e "  ${GRE}Theme Name      : $THEMENAME"
echo -e "  ${GRE}Theme Creator   : $CREATOR"
echo -e "  ${GRE}Theme Version   : $THEMEVER"
echo -e "  ${GRE}Theme Link      : "
echo -e "  ${GRE}github.com/$GITUSER/$GITREPO${NOR}"
# echo -e "  ${GRE}Installer Name  : $INSTALLERNAME${NOR}" # for logging purpose
# echo -e "  ${GRE}Git RAW         : $GITRAW${NOR}" # for logging purpose
# echo -e "  ${GRE}Check Net       : $CHECKNET${NOR}" # for logging purpose
# echo -e "  ${GRE}Older Xdrm Path : $XDERMOLDTHEME${NOR}" # for logging purpose
echo "==========================================="
echo -e "  ${GRE}Install Status  : $INSTALLSTAT"
echo -e "  ${GRE}Xderm Path      : $XDERMPATHINFO"
echo -e "  ${GRE}Xderm Backup    : $XDERMPATHBAKINFO${NOR}"
echo "==========================================="
echo -e "  ${YEL}Panel Username  : $USERNOW"
echo -e "  ${YEL}Panel Password  : $PASSNOW"
echo -e "  ${YEL}Login Page      : $LOGINOW"
echo -e "  ${YEL}Login Pg Backup : $LOGINOWBAK${NOR}"
echo "==========================================="
echo -e "               ${YEL}Command Lists${NOR}"
echo -e "===========================================${GRE}"
echo "  Install Git              : 1 / g / G"
echo "  Install Theme            : 2 / i / I"
echo "  Update Theme             : 3 / u / U"
echo "  Reinstall Theme          : 4 / rt / RT"
echo "  Uninstall Theme          : 5 / ut / UT"
echo "  Change User & Pass Login : 6 / up / UP"
echo "  Change Username Only     : 7 / un / UN"
echo "  Change Password Only     : 8 / pw / PW"
echo "  Install Login Page       : 9 / il / IL"
echo "  Remove Login Page        : 10 / rl / RL"
echo -e "${NOR}==========================================="
echo -e "           ${YEL}Exit = type anything !${NOR}"
echo "==========================================="
echo ""
echo -n "   Enter Your Option : " 
read -r jawab
echo "==========================================="

# wget -S --spider github.com/squarepants96/xdrtheme-adminlte 2>&1 #Network Checker

function xdrtheme_checknet() {
	echo "  Checking connections..."
	if wget -S --spider "$CHECKNET" 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
		echo "  Internet connected..."
	else
		echo "  No internet connection or repository url unavailable..."
		echo "  Leaving."
		sleep 3
		clear
		./"$INSTALLERNAME"
	fi
}

function xdrtheme_git_install() {
	if [[ $(opkg list-installed git | grep -c git) = "1" ]]; then
		echo "  Git package already installed..."
		echo "  Leaving..."
		clear
		./"$INSTALLERNAME"
	else
		echo "  git package is not installed, installing..."
		opkg update && opkg install git
		echo "  Done !."
		clear
		./"$INSTALLERNAME"
	fi
	sleep 2
}

function xdrtheme_xderm_backup() {
	echo "  Creating $XDERMOLDTHEME backup..."
	if [[ -d $XDERMPATH ]] && [[ -d $XDERMPATHBAK ]]; then
		echo "  Removing older backup..."
		rm -rf $XDERMPATHBAK
		echo "  Creating older xderm theme backup..."
		mv $XDERMPATH $XDERMPATHBAK
		echo "  Backup created..."
	elif [[ -d $XDERMPATH ]] && [[ ! -d $XDERMPATHBAK ]]; then
		echo "  Creating older xderm theme backup..."
		mv $XDERMPATH $XDERMPATHBAK
		echo "  Backup created..."
	elif [[ ! -d $XDERMPATH ]]; then
		echo "  Older Xderm Mini folder is not available, skip backup..."		
	fi
}

function xdrtheme_xderm_restore() {
	echo "  Restoring $XDERMOLDTHEME backup..."
	if [[ -d $XDERMPATHBAK ]] && [[ -d $XDERMPATH ]]; then
		echo "  Removing older backup..."
		rm -rf $XDERMPATH
		echo "  Restoring older xderm theme backup..."
		mv $XDERMPATHBAK $XDERMPATH
		echo "  Backup restored..."
	elif [[ -d $XDERMPATHBAK ]] && [[ ! -d $XDERMPATH ]]; then
		echo "  Creating older xderm theme backup..."
		mv $XDERMPATHBAK $XDERMPATH
		echo "  Backup restored..."
	elif [[ ! -d $XDERMPATHBAK ]]; then
		echo "  Older Xderm Mini folder is not available, skip backup..."		
	fi
}

function xdrtheme_config_backup() {
	echo "  Backing up Xderm Mini configurations..."
	if [[ ! -d $XDERMCONFIGBAK ]]; then
		echo "  Backup directory is not available, creating..."
		mkdir $XDERMCONFIGBAK
		echo "  Backup directory created..."
	else
		echo "  Backup directory available, skipping..."			
	fi
	if [[ -d $XDERMPATH/config ]]; then
		cp $XDERMPATH/config $XDERMCONFIGBAK/configbak
		echo "  Config folder backed up..."
	else
		echo "  Config folder is not available, skipping..."			
	fi
	if [[ -f $XDERMPATH/config.txt ]]; then
		cp $XDERMPATH/config.txt $XDERMCONFIGBAK/config.txt.bak
		echo "  Config file backed up..."
	else
		echo "  Config file is not available, skipping..."			
	fi
	if [[ -f $XDERMPATH/xderm-mini ]]; then
		cp $XDERMPATH/xderm-mini $XDERMCONFIGBAK/xderm-mini.bak
		echo "  Xderm binary file backed up..."
	else
		echo "  Xderm binary is not available, skipping..."			
	fi
	if [[ -f /root/auth.txt ]]; then
		cp /root/auth.txt $XDERMCONFIGBAK/auth.txt
		echo "  Login panel auth backed up..."
	else
		echo "  Login panel auth is not available, skipping..."			
	fi
}

function xdrtheme_config_restore() {
	echo "  Restoring Xderm Mini configurations..."
	if [[ -d $XDERMCONFIGBAK/configbak ]]; then
		cp $XDERMCONFIGBAK/configbak $XDERMPATH/config
		echo "  Configs folder restored..."
	else
		echo "  Config folder is not available, skipping..."			
	fi
	if [[ -d $XDERMCONFIGBAK/config.txt.bak ]]; then
		cp $XDERMCONFIGBAK/config.txt.bak $XDERMPATH/config.txt
		echo "  Config file restored..."
	else
		echo "  Config file is not available, skipping..."			
	fi
	if [[ -d $XDERMCONFIGBAK/xderm-mini.bak ]]; then
		cp $XDERMCONFIGBAK/xderm-mini.bak $XDERMPATH/xderm-mini
		echo "  Xderm binary backed up..."
	else
		echo "  Xderm binary is not available, skipping..."			
	fi
	if [[ -f $XDERMCONFIGBAK/auth.txt ]]; then
		cp $XDERMCONFIGBAK/auth.txt /root/auth.txt
		echo "  Login panel auth restored..."
	else
		echo "  Login panel auth is not available, skipping..."			
	fi
	if [[ -d $XDERMCONFIGBAK ]]; then
		echo "  Backup directory is available, deleting..."
		rm -rf $XDERMCONFIGBAK
		echo "  Backup directory deleted..."
	else
		echo "  Backup directory not available, skipping..."			
	fi
}

function xdrtheme_theme_info() {
	if [[ ! -f $XDERMPATH/index.php ]] && [[ -f $THEMEINFO ]] && [[ ! -f $XDERMPATH/xderm-mini ]]; then
		echo "  $THEMEINFO is available, skipping..."
	else
		echo "  $THEMEINFO is not available, adding file..."
		echo "$THEMEINFO" > "$THEMEINFO"
		echo "THEMENAME=$THEMENAME" >> "$THEMEINFO"
		echo "CREATOR=$CREATOR" >> "$THEMEINFO"
		echo "THEMEVER=$THEMEVER" >> "$THEMEINFO"
		echo "GITUSER=$GITUSER" >> "$THEMEINFO"
		echo "GITREPO=$GITREPO" >> "$THEMEINFO"
		echo "GITBRANCH=$GITBRANCH" >> "$THEMEINFO"
	fi
}

function xdrtheme_start_xderm() {
	echo "  Starting Xderm Mini..."
	echo Start > /www/xderm/log/st
	echo "  Xderm Mini Started..."
	echo "  Done ! Refresh Xderm Mini Page"
}

function xdrtheme_install_theme() {
	if [[ ! -d $XDERMPATH ]]; then
		echo "  Xderm Mini directory is unavailable, creating..."
		mkdir $XDERMPATH
		echo "  Xderm Mini directory created..."
	fi
	if [[ -d $XDERMPATHBAK ]] && [[ "$(ls -A "$XDERMPATH" 2> /dev/null)" == "" ]] && [[ ! -f $THEMEINFO ]]; then
		echo "  $THEMEINFO is available, starting installation..."
		echo "  Cloning $GITURLTHEME ..."
		git clone "$GITURLTHEME" $XDERMPATH
		echo "  Clone created..."
		echo "  $THEMENAME by $CREATOR installed..."
	else
		echo "  Installation skipped because..."
		echo "  $THEMEINFO is available..."
		echo "  $THEMENAME by $CREATOR already installed..."
		echo "  If you want to force installation, please use Reinstall menu..."
	fi
}

function xdrtheme_update_theme() {
	echo "  Updating $THEMENAME theme..."
	cp /root/xdrtheme-update /root/"$GITREPO"-update
	sleep 1
	sed -i '/^$/d' /root/"$GITREPO"-update
	sed -i -e "s+^+${GITRAW}+g" /root/"$GITREPO"-update
	sleep 1
	echo "  Downloading theme patches..."
	wget -N -i /root/"$GITREPO"-update -P $XDERMPATH
	echo "  Download done..."
	rm /root/"$GITREPO"-update
	echo "  $THEMENAME by $CREATOR updated..."
}

function xdrtheme_uninstall_theme() {
	echo -e "${NOR}"
	echo "  $THEMEINFO is $INSTALLSTAT..."
	echo -e "${NOR}"
	echo "  $XDERMPATH is $XDERMPATHINFO..."
	echo -e "${NOR}"
	echo "  $XDERMPATHBAK is $XDERMPATHBAKINFO..."
	echo -e "${NOR}"
	echo "  Uninstalling $THEMENAME..."
	sleep 1
	if [[ -f $THEMEINFO ]] && [[ -d $XDERMPATH ]] && [[ -d $XDERMPATHBAK ]]; then
		echo "  Removing $THEMENAME inside $XDERMPATH..."
		rm -rf $XDERMPATH
		echo "  $THEMENAME uninstalled..."
	elif [[ -f $THEMEINFO ]]; then
		echo "  Removing $THEMENAME inside $XDERMPATH..."
		rm -rf $XDERMPATH
		echo "  $THEMENAME uninstalled..."
	else
		echo "  $XDERMPATH or $XDERMPATHBAK or $THEMEINFO is not available..."
		echo "  Leaving ..."	
	fi
}

function xdrtheme_change_auth() {
	echo -n "  Enter New Username : " 
	read -r USERNEW
	echo "==========================================="
	echo -n "  Enter New Password : " 
	read -r PASSNEW
	echo -e "user=$USERNEW\npasswd=$PASSNEW" > /root/auth.txt
}

function xdrtheme_change_user() {
	echo -n "  Enter New Username : " 
	read -r USERNEW
	echo -e "user=$USERNEW\npasswd=$PASSNOW" > /root/auth.txt
}

function xdrtheme_change_pass() {
	echo -n "  Enter New Password : "
	read -r PASSNEW
	echo -e "user=$USERNOW\npasswd=$PASSNEW" > /root/auth.txt
}

function xdrtheme_remove_login() {
	echo "==========================================="
	echo -e "     Xderm Mini Login Page Remover by helmiau "
	echo "==========================================="
	echo -e " "
	echo -e "Notes : "
	echo -e "- This script will remove xderm-mini login page"
	echo -e "- Please clear all web history and cache after removal!"
	echo -e "- If bug occured, Open incognito tab"
	echo -e "- If bug still occured, Use other browser"
	echo -e ""
	echo -e " Process starting after 2 secs....."
	sleep 2
	echo -e " Removal process started..."
	sleep 1
	echo -e ""

	echo -e " Finding login.php file..."
	nyari=$(find /www/xderm)
	if [[ $nyari == *"login.php"* ]]; then
		mv /www/xderm/login.php /www/xderm/login.php.xdrtool
		echo -e " login.php file deleted !"
		sleep 1
	else
		echo -e " Removal failed ! because login.php file is unavailable"
		sleep 1
	fi

	echo -e " Finding header.php file..."
	nyari=$(find /www/xderm)
	if [[ $nyari == *"header.php"* ]]; then
		mv /www/xderm/header.php /www/xderm/header.php.xdrtool
		echo -e " header.php file deleted !"
		sleep 1
	else
		echo -e " Removal failed ! because login.php file is unavailable"
		sleep 1
	fi

	echo "==========================================="
	echo -e " Removal login page process finished..."
}

function xdrtheme_install_login() {
	echo "==========================================="
	echo -e "     Xderm Mini Login Page Installer by helmiau "
	echo "==========================================="
	echo -e " "
	echo -e "Notes : "
	echo -e "- This script will install xderm-mini login page"
	echo -e "- Please clear all web history and cache after removal!"
	echo -e "- If bug occured, Open incognito tab"
	echo -e "- If bug still occured, Use other browser"
	echo -e ""
	echo -e " Process starting after 2 secs....."
	sleep 2
	echo -e " Install process started..."
	sleep 1
	echo -e ""

	echo -e " Finding login.php file..."
	nyari=$(find /www/xderm)
	if [[ $nyari == *"login.php.xdrtool"* ]]; then
		mv /www/xderm/login.php.xdrtool /www/xderm/login.php
		echo -e " login.php file installed !"
		sleep 1
	else
		echo -e " Install failed ! because login.php backup file is unavailable"
		echo -e " Try online installation"
		wget -O /www/xderm/login.php "$URLTHEME"/login.php -q
		sleep 1
	fi

	echo -e " Finding header.php file..."
	nyari=$(find /www/xderm)
	if [[ $nyari == *"header.php.xdrtool"* ]]; then
		mv /www/xderm/header.php.xdrtool /www/xderm/header.php
		echo -e " header.php file installed !"
		sleep 1
	else
		echo -e " Install failed ! because header.php backup file is unavailable"
		echo -e " Try online installation"
		wget -O /www/xderm/header.php "$URLTHEME"/header.php -q
		sleep 1
	fi

	echo "==========================================="
	echo -e " Install login page process finished..."
}

function xderm_return_installer() {
	echo "==========================================="
	clear
	if [[ -f /root/$INSTALLERNAME ]]; then
		./"$INSTALLERNAME"
	elif [[ -f /root/$INSTALLERNAME ]] && [[ -f /bin/$INSTALLERNAME ]]; then
		"$INSTALLERNAME"
	elif [[ ! -f /root/$INSTALLERNAME ]] && [[ -f /bin/$INSTALLERNAME ]]; then
		"$INSTALLERNAME"
	else
		echo "==========================================="
		echo e- "  $INSTALLERNAME not found ! Reinstalling.."
		echo "==========================================="
		wget -O /bin/"$INSTALLERNAME" s.id/xdrtool -q
		chmod +x /bin/"$INSTALLERNAME"
		if [[ -f /bin/$INSTALLERNAME ]] && [[ ! -f /bin/$INSTALLERNAME ]]; then
			cp /bin/"$INSTALLERNAME" /root/"$INSTALLERNAME"
			chmod +x /root/"$INSTALLERNAME"
		elif [[ -f /bin/$INSTALLERNAME ]] && [[ -f /bin/$INSTALLERNAME ]]; then
			rm /root/"$INSTALLERNAME"
			cp /bin/"$INSTALLERNAME" /root/"$INSTALLERNAME"
			chmod +x /root/"$INSTALLERNAME"
		fi
		echo e- "  Script reinstalled.. re run $INSTALLERNAME command for usage"
		echo "==========================================="
	fi
}

#-- Install Git
if [[ $jawab == "g" || $jawab == "G" || $jawab == "1" ]]; then
	clear
	xdrtheme_checknet \ &&
	xdrtheme_git_install \ &&
	echo "==========================================="

#-- Install Theme
elif [[ $jawab == "i" || $jawab == "I" || $jawab == "2" ]]; then
	clear
	echo "  Installation of $THEMENAME theme by $CREATOR is started..."
	xdrtheme_checknet \ &&
	xdrtheme_xderm_backup \ &&
	xdrtheme_config_backup \ &&
	xdrtheme_install_theme \ &&
	xdrtheme_config_restore \ &&
	xdrtheme_theme_info \ &&
	xdrtheme_start_xderm \ &&
	xderm_return_installer

#-- Update Theme
elif [[ $jawab == "u" || $jawab == "U" || $jawab == "3" ]]; then
	clear
	echo "  Update of $THEMENAME theme by $CREATOR is started..."
	xdrtheme_checknet \ &&
	xdrtheme_config_backup \ &&
	xdrtheme_update_theme \ &&
	xdrtheme_config_restore \ &&
	xdrtheme_theme_info \ &&
	xdrtheme_start_xderm \ &&
	xderm_return_installer

#-- Reinstall Theme
elif [[ $jawab == "rt" || $jawab == "RT" || $jawab == "4" ]]; then
	clear
	echo "  Reinstallation of $THEMENAME theme by $CREATOR is started..."
	xdrtheme_checknet \ &&
	xdrtheme_config_backup \ &&
	xdrtheme_uninstall_theme \ &&
	xdrtheme_install_theme \ &&
	xdrtheme_config_restore \ &&
	xdrtheme_theme_info \ &&
	xdrtheme_start_xderm \ &&
	xderm_return_installer

#-- Uninstall Theme
elif [[ $jawab == "ut" || $jawab == "UT" || $jawab == "5" ]]; then
	clear
	echo "  Uninstallation of $THEMENAME theme by $CREATOR is started..."
	xdrtheme_config_backup \ &&
	xdrtheme_uninstall_theme \ &&
	xdrtheme_xderm_restore \ &&
	xdrtheme_config_restore \ &&
	xdrtheme_start_xderm \ &&
	xderm_return_installer

#-- Change username and password
elif [[ $jawab == "up" || $jawab == "UP" || $jawab == "6" ]]; then
	xdrtheme_change_auth \ &&
	xderm_return_installer

#-- Change username only
elif [[ $jawab == "un" || $jawab == "UN" || $jawab == "7" ]]; then
	xdrtheme_change_user \ &&
	xderm_return_installer

#-- Change password only
elif [[ $jawab == "pw" || $jawab == "PW" || $jawab == "8" ]]; then
	xdrtheme_change_pass \ &&
	xderm_return_installer

#-- Installer login page
elif [[ $jawab == "il" || $jawab == "IL" || $jawab == "9" ]]; then
	clear
	xdrtheme_install_login \ &&
	xderm_return_installer

#-- Remover login page
elif [[ $jawab == "rl" || $jawab == "RL" || $jawab == "10" ]]; then
	clear
	xdrtheme_remove_login \ &&
	xderm_return_installer

#-- Exit program
else
	echo "    Exiting program !"
	echo "==========================================="
	exit
fi

#
#   This script is used to install Xderm Mini GUI custom theme
#   Installation script by helmiau a.k.a Helmi Amirudin
#   my profile page https://me.helmiau.my.id
#   my github https://github.com/helmiau
#